{"version":3,"sources":["components/IncidentRate/IncidentRate.module.css","components/Cards/Cards.module.css","components/OutsideLinks/OutsideLinks.module.css","components/sentimentChart/sentimentChartPie.jsx","components/sentimentChart/sentimentChart.jsx","api/index.js","components/Map/Map.jsx","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/OutsideLinks/OutsideLinks.jsx","components/IncidentRate/IncidentRate.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/sentimentChart/sentimentChart.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","components/Map/Map.module.css","components/Chart/Chart.module.css","images/grayed.png","images/sentimentAnalysis.png","images/setu3.png","images/who7.png","images/newcrop.png"],"names":["module","exports","sentimentChartPie","fetcheddata","require","console","log","data","pos","neg","nut","size","length","positive","negative","neutral","pieChart","labels","datasets","label","backgroundColor","hoverBackgroundColor","options","title","display","text","fontSize","legend","position","className","styles","container","sentimentChart","lineChart","map","d","date","borderColor","fill","scales","yAxes","scaleLabel","labelString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","confirmed","recovered","deaths","lastUpdate","fetchDailyData","dailyData","total","reportDate","incidentRate","fetchCountries","countries","name","fetchLocation","Map","mapboxgl","accessToken","CENTER","mapContainerRef","useRef","useState","fetchedcountries","setFetchedCountries","useEffect","fetchAPI","current","style","center","zoom","addControl","NavigationControl","stores","type","features","c","geometry","coordinates","countryInfo","long","lat","properties","confiremed","cases","forEach","store","i","id","on","marker","Marker","setLngLat","setPopup","Popup","offset","setHTML","addTo","mapContainer","ref","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","varient","Chart","setDailyData","xAxes","gridLines","drawOnChartArea","barChart","CountryPicker","handleCountryChange","FormControl","formcontrol","selectContainer","NativeSelect","optionSelected","defaultValue","onChange","e","target","key","useStyles","makeStyles","cardDetails","flex","cardMedia","width","post","giver","description","image","setu","imageTitle","post1","who","OutsideLinks","classes","h","box","CardActionArea","href","paragraph","Hidden","xsDown","src","banner","alt","fund","IncidentRate","theme","footer","padding","Footer","bottom","heading","align","App","state","fetchedData","setState","this","imageClass","mapHeading","imageSentimentAnalysis","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e279704.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"IncidentRate_container__2XU4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2tU-S\",\"card\":\"Cards_card__24_Fj\",\"infected\":\"Cards_infected__3E3NR\",\"recovered\":\"Cards_recovered__1Vrrg\",\"deaths\":\"Cards_deaths__1phhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OutsideLinks_container__9LUXP\",\"card\":\"OutsideLinks_card__3l8Qr\",\"h\":\"OutsideLinks_h__2_mIH\",\"banner\":\"OutsideLinks_banner__o6PUO\"};","import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport styles from \"./sentimentChart.module.css\";\r\n\r\nconst sentimentChartPie = () => {\r\n  var fetcheddata = require(\"../../info/data.json\");\r\n  console.log(fetcheddata.data);\r\n\r\n  var pos = 0;\r\n  var neg = 0;\r\n  var nut = 0;\r\n  var size = 0;\r\n  for (size = 0; size < fetcheddata.data.length; size++) {\r\n    pos += fetcheddata.data[size].positive;\r\n    neg += fetcheddata.data[size].negative;\r\n    nut += fetcheddata.data[size].neutral;\r\n  }\r\n  console.log(pos / size, neg / size, nut / size);\r\n\r\n  const pieChart = fetcheddata.data.length ? (\r\n    <Doughnut\r\n      data={{\r\n        labels: [\"Positive\", \"Negative\", \"Neutral\"],\r\n        datasets: [\r\n          {\r\n            label: \"Rainfall\",\r\n            backgroundColor: [\r\n              \"rgb(160, 255, 75)\",\r\n              \"rgb(252,32,3)\",\r\n              \"rgb(250, 181, 5)\",\r\n            ],\r\n            hoverBackgroundColor: [\r\n              \"rgba(160, 255, 75,0.5)\",\r\n              \"rgba(252,32,3,0.5)\",\r\n              \"rgba(250, 181, 5,0.5)\",\r\n            ],\r\n            data: [pos / size, neg / size, nut / size],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: \"Sentiment of People during the time of COVID-19\",\r\n          fontSize: 20,\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: \"bottom\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{pieChart}</div>;\r\n};\r\n\r\nexport default sentimentChartPie;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styles from \"./sentimentChart.module.css\";\r\n\r\nconst sentimentChart = () => {\r\n  var fetcheddata = require(\"../../info/data.json\");\r\n  console.log(fetcheddata.data);\r\n\r\n  const lineChart = fetcheddata.data.length ? (\r\n    <Line\r\n      data={{\r\n        labels: fetcheddata.data.map((d) => d.date),\r\n        datasets: [\r\n          {\r\n            data: fetcheddata.data.map((d) => d.positive),\r\n            label: \"Positive\",\r\n            borderColor: \"rgb(160, 255, 75)\",\r\n            backgroundColor: \"rgba(160, 255, 75, 0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: fetcheddata.data.map((d) => d.negative),\r\n            label: \"Negative\",\r\n            borderColor: \"rgb(252,32,3)\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: fetcheddata.data.map((d) => d.neutral),\r\n            label: \"Neutral\",\r\n            borderColor: \"rgb(250, 181, 5)\",\r\n            backgroundColor: \"rgba(250, 181, 5, 0.2)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: \"Change in Sentiment of people as the time passes\",\r\n          fontSize: 20,\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"percentage\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default sentimentChart;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(changeableUrl);\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n      incidentRate: dailyData.incidentRate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nconst baseUrl = \"https://corona.lmao.ninja/v2/countries\";\r\n\r\nexport const fetchLocation = async () => {\r\n  try {\r\n    const { data = [] } = await axios.get(`${baseUrl}`);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { fetchLocation } from \"../../api/index\";\r\nimport styles from \"./Map.module.css\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nconst Map = () => {\r\n  mapboxgl.accessToken =\r\n    \"pk.eyJ1Ijoic3VyYWpzbHkyMDIwIiwiYSI6ImNrYXBseGtjdjAzcnEyeGw0ZWR5cXhqYnkifQ.DBBAWepmS5Mo92WjLNN8dg\";\r\n\r\n  const LOCATION = {\r\n    lat: 0,\r\n    lng: 0,\r\n  };\r\n  const CENTER = [LOCATION.lat, LOCATION.lng];\r\n  const DEFAULT_ZOOM = 1;\r\n\r\n  const mapContainerRef = useRef(null);\r\n  const [fetchedcountries, setFetchedCountries] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchLocation());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\r\n      style: \"mapbox://styles/mapbox/dark-v10\",\r\n      center: CENTER,\r\n      zoom: DEFAULT_ZOOM,\r\n    });\r\n    // add navigation control (zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), \"bottom-right\");\r\n\r\n    var stores = {\r\n      type: \"FeatureCollection\",\r\n      features: fetchedcountries.map((c) => ({\r\n        type: \"Feature\",\r\n        geometry: {\r\n          type: \"Point\",\r\n          coordinates: [c.countryInfo.long, c.countryInfo.lat],\r\n        },\r\n        properties: {\r\n          country: c.country,\r\n          confiremed: c.cases,\r\n          recovered: c.recovered,\r\n          deaths: c.deaths,\r\n        },\r\n      })),\r\n    };\r\n\r\n    stores.features.forEach(function (store, i) {\r\n      store.properties.id = i;\r\n    });\r\n\r\n    map.on(\"load\", function () {\r\n      var marker = stores.features.forEach(function (marker) {\r\n        // create a HTML element for each feature\r\n\r\n        // make a marker for each feature and add to the map\r\n        new mapboxgl.Marker()\r\n          .setLngLat(marker.geometry.coordinates)\r\n          .setPopup(\r\n            new mapboxgl.Popup({ offset: 25 }) // add popups\r\n              .setHTML(\r\n                \"<h3>\" +\r\n                  marker.properties.country +\r\n                  \"</h3><p><strong>Confirmed:</strong>\" +\r\n                  marker.properties.confiremed +\r\n                  \"</p><p><strong>Recovered:</strong>\" +\r\n                  marker.properties.recovered +\r\n                  \"</p><p><strong>Deaths:</strong>\" +\r\n                  marker.properties.deaths +\r\n                  \"</p>\"\r\n              )\r\n          )\r\n          .addTo(map);\r\n      });\r\n    });\r\n  });\r\n\r\n  return <div className={styles.mapContainer} ref={mapContainerRef} />;\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"loading\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varient=\"body2\">\r\n              Total number of people infected from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varient=\"body2\">\r\n              Total number of people recovered from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography varient=\"body2\">\r\n              Total number of people Deceased from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Cards;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({\r\n  data: { confirmed, recovered, deaths, incidentRate },\r\n  country,\r\n}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"rgb(231,76,60)\",\r\n            backgroundColor: \"rgba(231,76,60,0.1)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"rgb(0,0,0)\",\r\n            backgroundColor: \"rgba(81, 90, 90, 0.1)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: \"Daily Update On COVID-19\",\r\n          fontSize: 20,\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(231, 76, 60, 0.5)\",\r\n              \"rgba(39, 174, 96, 0.5)\",\r\n              \"rgba(81, 90, 90, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: `Current state in ${country}`,\r\n          fontSize: 20,\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api/index\";\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedcountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={cx(styles.formcontrol, styles.selectContainer)}>\r\n      <NativeSelect\r\n        className={styles.optionSelected}\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedcountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport setu from \"../../images/setu3.png\";\r\nimport who from \"../../images/who7.png\";\r\nimport fund from \"../../images/newcrop.png\";\r\nimport styles from \"./OutsideLinks.module.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    display: \"flex\",\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n});\r\n\r\nconst post = {\r\n  title: \"Aarogya Setu\",\r\n  giver: \"NIC e-Gov Apps\",\r\n  description:\r\n    \"Aarogya Setu is a mobile application developed by the Government of India to connect essential health services with the people of India in our combined fight against COVID-19.\",\r\n  image: setu,\r\n  imageTitle: \"imageTitle\",\r\n};\r\n\r\nconst post1 = {\r\n  title: \"WHO on Coronavirus\",\r\n  giver: \"World Health Organization\",\r\n  description:\r\n    \"WHO is working 24/7 to analyse data, provide advice, coordinate with partners, help countries prepare, increase supplies and manage expert networks.\",\r\n  image: who,\r\n  imageTitle: \"imageTitle\",\r\n};\r\n\r\nexport default function OutsideLinks() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.h}>Other Useful Resources:</h1>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item xs={12} md={5} className={styles.box}>\r\n          <CardActionArea\r\n            component=\"a\"\r\n            href=\"https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en_IN\"\r\n          >\r\n            <Card className={classes.card}>\r\n              <div className={classes.cardDetails}>\r\n                <CardContent>\r\n                  <Typography component=\"h2\" variant=\"h5\">\r\n                    {post.title}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {post.giver}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" paragraph>\r\n                    {post.description}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">\r\n                    Click to Download the App\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n              <Hidden xsDown>\r\n                <div className={classes.cardMedia} title={post.imageTitle}>\r\n                  <img src={post.image} className={styles.banner} alt=\"img\" />\r\n                </div>\r\n              </Hidden>\r\n            </Card>\r\n          </CardActionArea>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={5}>\r\n          <CardActionArea\r\n            component=\"a\"\r\n            href=\"https://www.who.int/health-topics/coronavirus#tab=tab_1\"\r\n          >\r\n            <Card className={classes.card}>\r\n              <div className={classes.cardDetails}>\r\n                <CardContent>\r\n                  <Typography component=\"h2\" variant=\"h5\">\r\n                    {post1.title}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {post1.giver}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" paragraph>\r\n                    {post1.description}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"primary\">\r\n                    Visit WHO website\r\n                  </Typography>\r\n                </CardContent>\r\n              </div>\r\n              <Hidden xsDown>\r\n                <div className={classes.cardMedia} title={post.imageTitle}>\r\n                  <img src={post1.image} className={styles.banner} alt=\"img\" />\r\n                </div>\r\n              </Hidden>\r\n            </Card>\r\n          </CardActionArea>\r\n        </Grid>\r\n        <Grid item xs={11} md={11}>\r\n          <CardActionArea component=\"a\" href=\"https://www.pmcares.gov.in/en/\">\r\n            <Card>\r\n              <img src={fund} className={styles.banner} alt=\"logo\" />\r\n            </Card>\r\n          </CardActionArea>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport styles from \"./IncidentRate.module.css\";\r\n\r\nconst IncidentRate = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  console.log(dailyData);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => (data.deaths / data.confirmed) * 100),\r\n            label: \"Death Rate\",\r\n            borderColor: \"rgb(0,0,0)\",\r\n            backgroundColor: \"rgba(81,90,90,0.1)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: \"Global Death Rate\",\r\n          fontSize: 20,\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              gridLines: {\r\n                drawOnChartArea: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default IncidentRate;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styles from \"./Footer.module.css\";\r\nimport cx from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    // marginTop: theme.spacing(8),\r\n    padding: theme.spacing(6, 0),\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <footer className={cx(styles.bottom, classes.footer)}>\r\n      <h3 className={styles.heading}>Handcrafted by:</h3>\r\n      <Typography\r\n        variant=\"subtitle1\"\r\n        align=\"center\"\r\n        color=\"#fffff\"\r\n        component=\"p\"\r\n      >\r\n        <a href=\"https://github.com/surajsly\">Suraj Singh</a>{\" \"}\r\n        <a href=\"https://github.com/surajsly\">and</a>{\" \"}\r\n        <a href=\"https://github.com/HimanshuGawri\"> Himanshu</a>\r\n      </Typography>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport SentimentChartPie from \"./components/sentimentChart/sentimentChartPie\";\r\nimport SentimentChart from \"./components/sentimentChart/sentimentChart\";\r\nimport Map from \"./components/Map/Map\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Chart from \"./components/Chart/Chart\";\r\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api/index\";\r\nimport image from \"./images/grayed.png\";\r\nimport imageSentimentAnalysis from \"./images/sentimentAnalysis.png\";\r\nimport OutsideLinks from \"./components/OutsideLinks/OutsideLinks\";\r\nimport IncidentRate from \"./components/IncidentRate/IncidentRate\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={image} className={styles.imageClass} alt=\"Logo\" />\r\n        <h3 className={styles.mapHeading}>Coronavirus Map</h3>\r\n        <Map />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Cards data={data} />\r\n        <Chart data={this.state.data} country={this.state.country} />\r\n        <IncidentRate />\r\n        <img\r\n          src={imageSentimentAnalysis}\r\n          className={styles.imageClass}\r\n          alt=\"Logo\"\r\n        />\r\n        <SentimentChart />\r\n        <SentimentChartPie />\r\n        <OutsideLinks />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3JbK3\",\"mapHeading\":\"App_mapHeading__6Q_8m\",\"imageClass\":\"App_imageClass__XE22p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"sentimentChart_container__yxeRq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2x3vg\",\"selectContainer\":\"CountryPicker_selectContainer__1Ee8o\",\"optionMenu\":\"CountryPicker_optionMenu__2o7A5\",\"active\":\"CountryPicker_active__2f7oF\",\"optionSelected\":\"CountryPicker_optionSelected__1pOcq\",\"optionItem\":\"CountryPicker_optionItem__1B1pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottom\":\"Footer_bottom__Jd9R8\",\"heading\":\"Footer_heading__30spj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapContainer\":\"Map_mapContainer__2Eemr\",\"marker\":\"Map_marker__-f0Df\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2ZL3C\"};","module.exports = __webpack_public_path__ + \"static/media/grayed.a049ed61.png\";","module.exports = __webpack_public_path__ + \"static/media/sentimentAnalysis.374c0a7b.png\";","module.exports = __webpack_public_path__ + \"static/media/setu3.7b8b7a94.png\";","module.exports = __webpack_public_path__ + \"static/media/who7.16a34194.png\";","module.exports = __webpack_public_path__ + \"static/media/newcrop.f3194e05.png\";"],"sourceRoot":""}